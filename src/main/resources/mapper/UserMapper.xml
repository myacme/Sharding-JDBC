<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.shardingjdbc.mapper.UserMapper">

    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.example.shardingjdbc.entity.User">
        <id column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        user_id, username, password, email, phone, create_time, update_time, status
    </sql>

    <!-- 插入用户 -->
    <insert id="insert" parameterType="com.example.shardingjdbc.entity.User" >
        INSERT INTO t_user (user_id, username, password, email, phone, create_time, update_time, status)
        VALUES (#{userId}, #{username}, #{password}, #{email}, #{phone}, #{createTime}, #{updateTime}, #{status})
    </insert>

    <!-- 根据用户ID查询用户 -->
    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_user
        WHERE user_id = #{userId}
    </select>

    <!-- 根据用户名查询用户 -->
    <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_user
        WHERE username = #{username}
    </select>

    <!-- 查询所有用户 -->
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_user
        ORDER BY create_time DESC
    </select>

    <!-- 更新用户信息 -->
    <update id="update" parameterType="com.example.shardingjdbc.entity.User">
        UPDATE t_user
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="password != null">password = #{password},</if>
            <if test="email != null">email = #{email},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="status != null">status = #{status},</if>
        </set>
        WHERE user_id = #{userId}
    </update>

    <!-- 根据用户ID删除用户 -->
    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM t_user WHERE user_id = #{userId}
    </delete>

    <!-- 分页查询用户 -->
    <select id="selectByPage" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_user
        ORDER BY create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 查询用户总数 -->
    <select id="countAll" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM t_user
    </select>

</mapper>
